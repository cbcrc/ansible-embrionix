modules_flows_config:
{% set ns = namespace(real_index_field=0,flag_first_empty_field=false) %}
{% set id = csvfile.split("\n") %}
{# Créé une liste yaml pour chaque ligne avec titre[i]: valeur[i] #}
{% set id = id[0].split(",") %}
{# Nettoyage? #}
{% for field in id %}
{% if ((ns.flag_first_empty_field == false) and (field == '')) %}
{%   set ns.flag_first_empty_field = true %}
{%   set ns.real_index_field = loop.index -1 %}
{% endif %}
{% endfor %}
{% if (ns.flag_first_empty_field == false) %}
{%   set ns.real_index_field = id | length  %}
{% endif %}
{% for item in csvfile.split("\n") %}
{# Associe La valeur à la variable values #}
{%   if loop.index != 1 %}
{%     set values = item.split(",")[0:ns.real_index_field] %}
{# Itère sur les élements pour formater la liste yaml #}
{% for x in id[0:ns.real_index_field] %}
{# Ajoute - à la première ligne de la liste + formatage #}
{%   if x == id[0] %}
  - '{{ x|trim() }}': '{{ values[loop.index - 1 ]|trim() }}'
{# Formate les autres lignes de la liste #}
{% elif x == "aud_chan_map" %}
{% set channels = values[loop.index - 1 ]|trim() %}
{% set aud_chan_map =  channels.split('|')%}
{% set ch_kv = "aud_chan_cnt"+ '\": \"' + aud_chan_map[0].partition(':')[2] %}
    "{{ ch_kv }}"
{% for ch in channels.split('|')[1:] %}
{% set ch_kv = "ch" + (loop.index - 1)|string + '\": \"' + ch.partition(':')[2].replace("\"", "") %}
    "{{ ch_kv }}"
{% endfor %}
{% else %}
    '{{ x|trim() }}': '{{ values[loop.index - 1 ]|trim() }}'
{# {% endif %} #}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}