# Playbook embox-csv-refclk.yml
#
# This playbook configures refclk parameters from values provided by a csv.
#
# Required csv columns:
# ip_addr_red, PTP_mode, ManualMode, PTP_domain_nb, PTP_VlanID, PTP_dscp
#
# Theses values needs to be defined in the inventory:
# - emsfp_refclk_1
# - emsfp_refclk_2
#
# Copyright: (c) 2018, Société Radio-Canada>
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
#
---
- hosts: localhost
  gather_facts: no
  # vars_files:
  #   - ../all/all.yml
  vars:
    - var_ip_config_file: "csv/ip-config-file.csv"
    - ansible_python_interpreter: /usr/bin/env python

  tasks:
    - name: Conversion CSV vers YML.
      template:
        src: "templates/csv_to_yaml.j2"
        dest: "vars/ipconfigs_payload.yml"
        force: yes
      vars: 
        - csvfile: "{{ lookup('file', '{{ var_ip_config_file }}') }}"
        - ansible_python_interpreter: /usr/bin/env python
      run_once: true
      check_mode: no
      changed_when: no

    - name: Get Modules configuration from the generated YML file.
      include_vars: ipconfigs_payload.yml
      check_mode: no
      changed_when: no

    - name: Pousser la configuration pour refclk
      emsfp_refclk:
        ip_addr: "{{ item.ip_addr_red }}"
        mode: "{{ item.PTP_mode }}"
        manual_ctrl: "{{ item.ManualMode }}"
      loop: "{{ modules }}"
      delegate_to: localhost

    - name: Pousser la configuration pour refclk_id 1
      emsfp_refclk_id:
        ip_addr: "{{ item.ip_addr_red }}"
        reference_clock_id: "{{ emsfp_refclk_1 }}"
        domain_num: "{{ item.PTP_domain_nb }}"
        vlan_id: "{{ item.PTP_VlanID }}"
        dscp: "{{ item.PTP_dscp }}"
      loop: "{{ modules }}"
      delegate_to: localhost

    - name: Pousser la configuration pour refclk_id 2
      emsfp_refclk_id:
        ip_addr: "{{ item.ip_addr_red }}"
        reference_clock_id: "{{ emsfp_refclk_2 }}"
        domain_num: "{{ item.PTP_domain_nb }}"
        vlan_id: "{{ item.PTP_VlanID }}"
        dscp: "{{ item.PTP_dscp }}"
      loop: "{{ modules }}"
      delegate_to: localhost
