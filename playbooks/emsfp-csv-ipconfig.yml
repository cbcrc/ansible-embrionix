# Playbook emsfp-csv-ipconfig.yml
#
# This playbook configures ip parameters from values provided by a csv.
#
# Required csv columns:
# ip_addr,subnet_mask,gateway,hostname,port,dhcp_enable,alias_ip,alias_ip_subnet,ctl_vlan_id,ctl_vlan_pcp,ctl_vlan_enable
#
# Copyright: (c) 2018, Société Radio-Canada>
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
#
---
- hosts: localhost
  gather_facts: no
  vars_files:
      - common_vars/all/all.yml
  vars:
    - var_file: "csv/config-file.csv"
    - ansible_python_interpreter: "{{ lookup('env','VIRTUAL_ENV') }}/bin/python"

  tasks:
    - set_fact:
        workflow_type: csv

    - name: Conversion CSV vers YML.
      template:
        src: "templates/csv_to_yaml.j2"
        dest: "vars/ipconfigs_payload.yml"
        force: yes
      vars: 
        - csvfile: "{{ lookup('file', '{{ var_file }}') }}"
        - ansible_python_interpreter: /usr/bin/env python
      run_once: true
      check_mode: no
      changed_when: no

    - name: Get Modules configuration from the generated YML file.
      include_vars: ipconfigs_payload.yml
      check_mode: no
      changed_when: no

    # - debug:
    #     msg: "{{ modules_ipconfig_payload }}"

    - name: create reachable_hosts group.
      include_tasks: snippets/snippet-csv-list-reachable-hosts.yml

    - name: Push configuration
      emsfp_ipconfig:
        ip_addr: "{{ item.ip_addr }}"
        hostname: "{{ item.hostname }}"
        dhcp_enable: "{{ item.dhcp_enable }}"
        ctl_vlan_id: "{{ item.ctl_vlan_id }}"
      register: result
      retries: 3
      delay: 1
      until: result is succeeded
      # register: sortie
      delegate_to: localhost
      loop: "{{ modules }}"
      when: item.ip_addr in reachable_hosts

    - name: Waits for port 80 after reboot
      wait_for:
        host: "{{ item.ip_addr  }}"
        port: 80
        delay: 1
        timeout: "{{ cv_embrionix_wait_for_timout }}"
        state: started
      loop: "{{ modules }}"
      when: item.ip_addr in reachable_hosts

    - name: Wait for api readiness
      uri:
        url: "http://{{ item.ip_addr }}/emsfp/node/v1/"
        follow_redirects: none
        method: GET
      register: _result
      until: _result.status == 200
      retries: "{{ cv_embrionix_uri_retries }}"
      delay: 1
      loop: "{{ modules }}"
      when: item.ip_addr in reachable_hosts

    # - debug: 
    #     msg: "{{ sortie.stdout_lines }}"

    # - debug: 
    #     msg: "{{ sortie.stderr_lines }}"